version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: dscripts_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: dscripts_backend
    volumes:
      - ./d_scripts/:/app/
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             gunicorn project.wsgi:application --bind 0.0.0.0:8000"

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: dscripts_bot
    env_file:
      - .env
    depends_on:
      - backend

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NGINX_CONF: nginx/default.conf
        FRONTEND_DIR: frontend
    container_name: dscripts_frontend
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume:
